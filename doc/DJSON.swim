DJSON
=====

Decommisioned. Use JSONY.pm instead.

<badge travis coveralls ingydotnet/djson-pm>

= Synopsis

  use DJSON;

  my $data = decode_djson $djson_string;

= Description

DJSON is a data language that is simlar to JSON, just more chill. All valid
JSON is also valid DJSON (and represents the same thing when decoded), but
DJSON lets you omit a lot of the syntax that makes JSON a pain to write.

= DJSON Syntax

Here is some examples of DJSON followed by equivalent JSON:

Words don't need quotes. A list of things is an array:

  foo bar baz

  [ "foo", "bar", "baz" ]

Strings with spaces can use single or double quotes:

  'foo bar'      # <= This is (a comment indicating) a string
  # More commenting
  "baz  boom "

  [ "foo bar ", "baz  boom " ]

Hashes still need curly braces:

  {
      foo { bar baz }
      num -1.2e3
  }

  { "foo": { "bar": "baz" }, "num": -1.2e3 }

More soon...

NOTE: You may want to look at the tests (especially `t/decode.t`) to see the
full abilities of DJSON.

= STATUS

*BEWARE!!!*

DJSON is mst's idea, and ingy's Pegex based implementation. The language is
just a baby, and will change a lot, or may go away entirely.

Development people are currently working on this in `#pegex` in
irc.freenode.net. Please drop by.

= Authors

* Ingy döt Net (ingy) <ingy@cpan.org>
* Matt S. Trout (mst) <mst@shadowcat.co.uk>

= Copyright and License

Copyright 2011-2014 Ingy döt Net

This library is free software and may be distributed under the same terms as
perl itself.

